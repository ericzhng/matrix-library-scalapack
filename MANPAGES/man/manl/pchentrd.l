.TH PCHENTRD l "13 August 2001" "ScaLAPACK version 1.7" ")"
.SH NAME

.SH SYNOPSIS
.TP 21
SUBROUTINE PCHENTRD(
UPLO, N, A, IA, JA, DESCA, D, E, TAU, WORK,
LWORK, RWORK, LRWORK, INFO )
.TP 21
.ti +4
CHARACTER
UPLO
.TP 21
.ti +4
INTEGER
IA, INFO, JA, LRWORK, LWORK, N
.TP 21
.ti +4
INTEGER
DESCA( * )
.TP 21
.ti +4
REAL
D( * ), E( * ), RWORK( * )
.TP 21
.ti +4
COMPLEX
A( * ), TAU( * ), WORK( * )
.TP 21
.ti +4
INTEGER
BLOCK_CYCLIC_2D, DLEN_, DTYPE_, CTXT_, M_, N_,
MB_, NB_, RSRC_, CSRC_, LLD_
.TP 21
.ti +4
PARAMETER
( BLOCK_CYCLIC_2D = 1, DLEN_ = 9, DTYPE_ = 1,
CTXT_ = 2, M_ = 3, N_ = 4, MB_ = 5, NB_ = 6,
RSRC_ = 7, CSRC_ = 8, LLD_ = 9 )
.TP 21
.ti +4
REAL
ONE
.TP 21
.ti +4
PARAMETER
( ONE = 1.0E+0 )
.TP 21
.ti +4
COMPLEX
CONE
.TP 21
.ti +4
PARAMETER
( CONE = ( 1.0E+0, 0.0E+0 ) )
.TP 21
.ti +4
LOGICAL
LQUERY, UPPER
.TP 21
.ti +4
CHARACTER
COLCTOP, ROWCTOP
.TP 21
.ti +4
INTEGER
ANB, CTXTB, I, IACOL, IAROW, ICOFFA, ICTXT,
IINFO, INDB, INDRD, INDRE, INDTAU, INDW, IPW,
IROFFA, J, JB, JX, K, KK, LLRWORK, LLWORK,
LRWMIN, LWMIN, MINSZ, MYCOL, MYCOLB, MYROW,
MYROWB, NB, NP, NPCOL, NPCOLB, NPROW, NPROWB,
NPS, NQ, ONEPMIN, ONEPRMIN, SQNPC, TTLRWMIN,
TTLWMIN
.TP 21
.ti +4
INTEGER
DESCB( DLEN_ ), DESCW( DLEN_ ), IDUM1( 3 ),
IDUM2( 3 )
.TP 21
.ti +4
EXTERNAL
BLACS_GET, BLACS_GRIDEXIT, BLACS_GRIDINFO,
BLACS_GRIDINIT, CHETRD, CHK1MAT, DESCSET,
IGAMN2D, PCELSET, PCHER2K, PCHETD2, PCHETTRD,
PCHK1MAT, PCLAMR1D, PCLATRD, PCTRMR2D,
PSLAMR1D, PB_TOPGET, PB_TOPSET, PXERBLA
.TP 21
.ti +4
LOGICAL
LSAME
.TP 21
.ti +4
INTEGER
INDXG2L, INDXG2P, NUMROC, PJLAENV
.TP 21
.ti +4
EXTERNAL
LSAME, INDXG2L, INDXG2P, NUMROC, PJLAENV
.TP 21
.ti +4
INTRINSIC
CMPLX, ICHAR, INT, MAX, MIN, MOD, REAL, SQRT
.TP 21
.ti +4
IF(
BLOCK_CYCLIC_2D*CSRC_*CTXT_*DLEN_*DTYPE_*LLD_*MB_*M_*NB_*N_*
RSRC_.LT.0 )RETURN
.TP 21
.ti +4
ICTXT
= DESCA( CTXT_ )
.TP 21
.ti +4
CALL
BLACS_GRIDINFO( ICTXT, NPROW, NPCOL, MYROW, MYCOL )
.TP 21
.ti +4
INFO
= 0
.TP 21
.ti +4
IF(
NPROW.EQ.-1 ) THEN
.TP 21
.ti +4
INFO
= -( 600+CTXT_ )
.TP 21
.ti +4
ELSE
.TP 21
.ti +4
CALL
CHK1MAT( N, 2, N, 2, IA, JA, DESCA, 6, INFO )
.TP 21
.ti +4
UPPER
= LSAME( UPLO, 'U' )
.TP 21
.ti +4
IF(
INFO.EQ.0 ) THEN
.TP 21
.ti +4
NB
= DESCA( NB_ )
.TP 21
.ti +4
IROFFA
= MOD( IA-1, DESCA( MB_ ) )
.TP 21
.ti +4
ICOFFA
= MOD( JA-1, DESCA( NB_ ) )
.TP 21
.ti +4
IAROW
= INDXG2P( IA, NB, MYROW, DESCA( RSRC_ ), NPROW )
.TP 21
.ti +4
IACOL
= INDXG2P( JA, NB, MYCOL, DESCA( CSRC_ ), NPCOL )
.TP 21
.ti +4
NP
= NUMROC( N, NB, MYROW, IAROW, NPROW )
.TP 21
.ti +4
NQ
= MAX( 1, NUMROC( N+JA-1, NB, MYCOL, DESCA( CSRC_ ),
NPCOL ) )
.TP 21
.ti +4
LWMIN
= MAX( ( NP+1 )*NB, 3*NB )
.TP 21
.ti +4
ANB
= PJLAENV( ICTXT, 3, 'PCHETTRD', 'L', 0, 0, 0, 0 )
.TP 21
.ti +4
MINSZ
= PJLAENV( ICTXT, 5, 'PCHETTRD', 'L', 0, 0, 0, 0 )
.TP 21
.ti +4
SQNPC
= INT( SQRT( REAL( NPROW*NPCOL ) ) )
.TP 21
.ti +4
NPS
= MAX( NUMROC( N, 1, 0, 0, SQNPC ), 2*ANB )
.TP 21
.ti +4
TTLWMIN
= 2*( ANB+1 )*( 4*NPS+2 ) + ( NPS+2 )*NPS
.TP 21
.ti +4
LRWMIN
= 1
.TP 21
.ti +4
TTLRWMIN
= 2*NPS
.TP 21
.ti +4
WORK(
1 ) = CMPLX( REAL( TTLWMIN ) )
.TP 21
.ti +4
RWORK(
1 ) = REAL( TTLRWMIN )
.TP 21
.ti +4
LQUERY
= ( LWORK.EQ.-1 .OR. LRWORK.EQ.-1 )
.TP 21
.ti +4
IF(
.NOT.UPPER .AND. .NOT.LSAME( UPLO, 'L' ) ) THEN
.TP 21
.ti +4
INFO
= -1
.TP 21
.ti +4
ELSE
IF( IROFFA.NE.ICOFFA .OR. ICOFFA.NE.0 ) THEN
.TP 21
.ti +4
INFO
= -5
.TP 21
.ti +4
ELSE
IF( DESCA( MB_ ).NE.DESCA( NB_ ) ) THEN
.TP 21
.ti +4
INFO
= -( 600+NB_ )
.TP 21
.ti +4
ELSE
IF( LWORK.LT.LWMIN .AND. .NOT.LQUERY ) THEN
.TP 21
.ti +4
INFO
= -11
.TP 21
.ti +4
ELSE
IF( LRWORK.LT.LRWMIN .AND. .NOT.LQUERY ) THEN
.TP 21
.ti +4
INFO
= -13
.TP 21
.ti +4
END
IF
.TP 21
.ti +4
END
IF
.TP 21
.ti +4
IF(
UPPER ) THEN
.TP 21
.ti +4
IDUM1(
1 ) = ICHAR( 'U' )
.TP 21
.ti +4
ELSE
.TP 21
.ti +4
IDUM1(
1 ) = ICHAR( 'L' )
.TP 21
.ti +4
END
IF
.TP 21
.ti +4
IDUM2(
1 ) = 1
.TP 21
.ti +4
IF(
LWORK.EQ.-1 ) THEN
.TP 21
.ti +4
IDUM1(
2 ) = -1
.TP 21
.ti +4
ELSE
.TP 21
.ti +4
IDUM1(
2 ) = 1
.TP 21
.ti +4
END
IF
.TP 21
.ti +4
IDUM2(
2 ) = 11
.TP 21
.ti +4
IF(
LRWORK.EQ.-1 ) THEN
.TP 21
.ti +4
IDUM1(
3 ) = -1
.TP 21
.ti +4
ELSE
.TP 21
.ti +4
IDUM1(
3 ) = 1
.TP 21
.ti +4
END
IF
.TP 21
.ti +4
IDUM2(
3 ) = 13
.TP 21
.ti +4
CALL
PCHK1MAT( N, 2, N, 2, IA, JA, DESCA, 6, 3, IDUM1, IDUM2,
INFO )
.TP 21
.ti +4
END
IF
.TP 21
.ti +4
IF(
INFO.NE.0 ) THEN
.TP 21
.ti +4
CALL
PXERBLA( ICTXT, 'PCHENTRD', -INFO )
.TP 21
.ti +4
RETURN
.TP 21
.ti +4
ELSE
IF( LQUERY ) THEN
.TP 21
.ti +4
RETURN
.TP 21
.ti +4
END
IF
.TP 21
.ti +4
IF(
N.EQ.0 )
RETURN
.TP 21
.ti +4
ONEPMIN
= N*N + 3*N + 1
.TP 21
.ti +4
LLWORK
= LWORK
.TP 21
.ti +4
CALL
IGAMN2D( ICTXT, 'A', ' ', 1, 1, LLWORK, 1, 1, -1, -1, -1,
-1 )
.TP 21
.ti +4
ONEPRMIN
= 2*N
.TP 21
.ti +4
LLRWORK
= LRWORK
.TP 21
.ti +4
CALL
IGAMN2D( ICTXT, 'A', ' ', 1, 1, LLRWORK, 1, 1, -1, -1, -1,
-1 )
.TP 21
.ti +4
NPROWB
= 0
.TP 21
.ti +4
IF(
( N.LT.MINSZ .OR. SQNPC.EQ.1 ) .AND. LLWORK.GE.ONEPMIN .AND.
LLRWORK.GE.ONEPRMIN .AND. .NOT.UPPER ) THEN
.TP 21
.ti +4
NPROWB
= 1
.TP 21
.ti +4
NPS
= N
.TP 21
.ti +4
ELSE
.TP 21
.ti +4
IF(
LLWORK.GE.TTLWMIN .AND. LLRWORK.GE.TTLRWMIN .AND. .NOT.
UPPER ) THEN
.TP 21
.ti +4
NPROWB
= SQNPC
.TP 21
.ti +4
END
IF
.TP 21
.ti +4
END
IF
.TP 21
.ti +4
IF(
NPROWB.GE.1 ) THEN
.TP 21
.ti +4
NPCOLB
= NPROWB
.TP 21
.ti +4
SQNPC
= NPROWB
.TP 21
.ti +4
INDB
= 1
.TP 21
.ti +4
INDRD
= 1
.TP 21
.ti +4
INDRE
= INDRD + NPS
.TP 21
.ti +4
INDTAU
= INDB + NPS*NPS
.TP 21
.ti +4
INDW
= INDTAU + NPS
.TP 21
.ti +4
LLWORK
= LLWORK - INDW + 1
.TP 21
.ti +4
CALL
BLACS_GET( ICTXT, 10, CTXTB )
.TP 21
.ti +4
CALL
BLACS_GRIDINIT( CTXTB, 'Row major', SQNPC, SQNPC )
.TP 21
.ti +4
CALL
BLACS_GRIDINFO( CTXTB, NPROWB, NPCOLB, MYROWB, MYCOLB )
.TP 21
.ti +4
CALL
DESCSET( DESCB, N, N, 1, 1, 0, 0, CTXTB, NPS )
.TP 21
.ti +4
CALL
PCTRMR2D( UPLO, 'N', N, N, A, IA, JA, DESCA, WORK( INDB ),
1, 1, DESCB, ICTXT )
.TP 21
.ti +4
IF(
NPROWB.GT.0 ) THEN
.TP 21
.ti +4
IF(
NPROWB.EQ.1 ) THEN
.TP 21
.ti +4
CALL
CHETRD( UPLO, N, WORK( INDB ), NPS, RWORK( INDRD ),
RWORK( INDRE ), WORK( INDTAU ),
WORK( INDW ), LLWORK, INFO )
.TP 21
.ti +4
ELSE
.TP 21
.ti +4
CALL
PCHETTRD( 'L', N, WORK( INDB ), 1, 1, DESCB,
RWORK( INDRD ), RWORK( INDRE ),
WORK( INDTAU ), WORK( INDW ), LLWORK,
INFO )
.TP 21
.ti +4
END
IF
.TP 21
.ti +4
END
IF
.TP 21
.ti +4
CALL
PSLAMR1D( N-1, RWORK( INDRE ), 1, 1, DESCB, E, 1, JA,
DESCA )
.TP 21
.ti +4
CALL
PSLAMR1D( N, RWORK( INDRD ), 1, 1, DESCB, D, 1, JA,
DESCA )
.TP 21
.ti +4
CALL
PCLAMR1D( N, WORK( INDTAU ), 1, 1, DESCB, TAU, 1, JA,
DESCA )
.TP 21
.ti +4
CALL
PCTRMR2D( UPLO, 'N', N, N, WORK( INDB ), 1, 1, DESCB, A,
IA, JA, DESCA, ICTXT )
.TP 21
.ti +4
IF(
MYROWB.GE.0 )
CALL BLACS_GRIDEXIT( CTXTB )
.TP 21
.ti +4
ELSE
.TP 21
.ti +4
CALL
PB_TOPGET( ICTXT, 'Combine', 'Columnwise', COLCTOP )
.TP 21
.ti +4
CALL
PB_TOPGET( ICTXT, 'Combine', 'Rowwise', ROWCTOP )
.TP 21
.ti +4
CALL
PB_TOPSET( ICTXT, 'Combine', 'Columnwise', '1-tree' )
.TP 21
.ti +4
CALL
PB_TOPSET( ICTXT, 'Combine', 'Rowwise', '1-tree' )
.TP 21
.ti +4
IPW
= NP*NB + 1
.TP 21
.ti +4
IF(
UPPER ) THEN
.TP 21
.ti +4
KK
= MOD( JA+N-1, NB )
.TP 21
.ti +4
IF(
KK.EQ.0 )
KK = NB
.TP 21
.ti +4
CALL
DESCSET( DESCW, N, NB, NB, NB, IAROW,
INDXG2P( JA+N-KK, NB, MYCOL, DESCA( CSRC_ ),
NPCOL ), ICTXT, MAX( 1, NP ) )
.TP 21
.ti +4
DO
10 K = N - KK + 1, NB + 1, -NB
.TP 21
.ti +4
JB
= MIN( N-K+1, NB )
.TP 21
.ti +4
I
= IA + K - 1
.TP 21
.ti +4
J
= JA + K - 1
.TP 21
.ti +4
CALL
PCLATRD( UPLO, K+JB-1, JB, A, IA, JA, DESCA, D, E,
TAU, WORK, 1, 1, DESCW, WORK( IPW ) )
.TP 21
.ti +4
CALL
PCHER2K( UPLO, 'No transpose', K-1, JB, -CONE, A,
IA, J, DESCA, WORK, 1, 1, DESCW, ONE, A,
IA, JA, DESCA )
.TP 21
.ti +4
JX
= MIN( INDXG2L( J, NB, 0, IACOL, NPCOL ), NQ )
.TP 21
.ti +4
CALL
PCELSET( A, I-1, J, DESCA, CMPLX( E( JX ) ) )
.TP 21
.ti +4
DESCW(
CSRC_ ) = MOD( DESCW( CSRC_ )+NPCOL-1, NPCOL )
.TP 21
.ti +4
10
CONTINUE
.TP 21
.ti +4
CALL
PCHETD2( UPLO, MIN( N, NB ), A, IA, JA, DESCA, D, E,
TAU, WORK, LWORK, IINFO )
.TP 21
.ti +4
ELSE
.TP 21
.ti +4
KK
= MOD( JA+N-1, NB )
.TP 21
.ti +4
IF(
KK.EQ.0 )
KK = NB
.TP 21
.ti +4
CALL
DESCSET( DESCW, N, NB, NB, NB, IAROW, IACOL, ICTXT,
MAX( 1, NP ) )
.TP 21
.ti +4
DO
20 K = 1, N - NB, NB
.TP 21
.ti +4
I
= IA + K - 1
.TP 21
.ti +4
J
= JA + K - 1
.TP 21
.ti +4
CALL
PCLATRD( UPLO, N-K+1, NB, A, I, J, DESCA, D, E, TAU,
WORK, K, 1, DESCW, WORK( IPW ) )
.TP 21
.ti +4
CALL
PCHER2K( UPLO, 'No transpose', N-K-NB+1, NB, -CONE,
A, I+NB, J, DESCA, WORK, K+NB, 1, DESCW,
ONE, A, I+NB, J+NB, DESCA )
.TP 21
.ti +4
JX
= MIN( INDXG2L( J+NB-1, NB, 0, IACOL, NPCOL ), NQ )
.TP 21
.ti +4
CALL
PCELSET( A, I+NB, J+NB-1, DESCA, CMPLX( E( JX ) ) )
.TP 21
.ti +4
DESCW(
CSRC_ ) = MOD( DESCW( CSRC_ )+1, NPCOL )
.TP 21
.ti +4
20
CONTINUE
.TP 21
.ti +4
CALL
PCHETD2( UPLO, KK, A, IA+K-1, JA+K-1, DESCA, D, E, TAU,
WORK, LWORK, IINFO )
.TP 21
.ti +4
END
IF
.TP 21
.ti +4
CALL
PB_TOPSET( ICTXT, 'Combine', 'Columnwise', COLCTOP )
.TP 21
.ti +4
CALL
PB_TOPSET( ICTXT, 'Combine', 'Rowwise', ROWCTOP )
.TP 21
.ti +4
END
IF
.TP 21
.ti +4
WORK(
1 ) = CMPLX( REAL( TTLWMIN ) )
.TP 21
.ti +4
RWORK(
1 ) = REAL( TTLRWMIN )
.TP 21
.ti +4
RETURN
.TP 21
.ti +4
END
.SH PURPOSE
